# -*- coding: utf-8 -*-
"""kecepatan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rR_-Dxf_PFRG2Ur1kL_7COFqUyRxdzsG
"""

import streamlit as st
import numpy as np
import time

st.set_page_config(page_title="Simulasi Kecepatan dan Waktu", layout="wide")

st.title('🚗🏍️ Simulasi Jarak, Kecepatan, dan Waktu')
st.subheader('Dua orang dari kota berbeda berjalan dan bertemu di tengah jalan')

# Layout dua kolom
col1, col2 = st.columns(2)

# Kolom 1: Konfigurasi
with col1:
    st.header('⚙️ Konfigurasi')

    kecepatan_a = st.slider('🔵 Kecepatan Si A (km/jam)', 1, 100, 40)
    kecepatan_b = st.slider('🟠 Kecepatan Si B (km/jam)', 1, 100, 50)
    jarak_total = st.slider('📏 Jarak Kota A ke Kota B (km)', 10, 200, 100)

    if 'mulai' not in st.session_state:
        st.session_state.mulai = False

    if st.button('🚀 Mulai Simulasi'):
        st.session_state.mulai = True

# Kolom 2: Simulasi
with col2:
    st.header('🚦 Simulasi Perjalanan')

    if st.session_state.mulai:
        waktu_bertemu = jarak_total / (kecepatan_a + kecepatan_b)
        st.success(f'🕒 Mereka akan bertemu setelah **{waktu_bertemu:.2f} jam**.')

        jalan_area = st.empty()
        info_area = st.empty()

        panjang_lintasan = 50
        tengah_lintasan = panjang_lintasan // 2

        waktu = 0
        interval_menit = 1
        interval_jam = interval_menit / 60

        while True:
            posisi_a = kecepatan_a * waktu
            posisi_b = kecepatan_b * waktu
            total_tempuh = posisi_a + posisi_b
            sisa_jarak = max(jarak_total - total_tempuh, 0)

            persentase_a = min(posisi_a / (jarak_total / 2), 1.0)
            persentase_b = min(posisi_b / (jarak_total / 2), 1.0)

            idx_a = min(int(persentase_a * (panjang_lintasan / 2)), panjang_lintasan - 1)
            idx_b = min(int(panjang_lintasan - (persentase_b * (panjang_lintasan / 2))), panjang_lintasan - 1)

            jalan = ['🛣️'] * panjang_lintasan

            if sisa_jarak < 0.1:
                jalan[tengah_lintasan] = '🎯'
            else:
                jalan[idx_a] = '🚗'
                jalan[idx_b] = '🏍️'

            jalan_area.markdown(
                f"<h3 style='text-align: center;'>{''.join(jalan)}</h3>",
                unsafe_allow_html=True
            )

            info_area.info(f"🚶‍♂️🚶‍♀️ Sisa jarak antar mereka: **{sisa_jarak:.2f} km**")

            if sisa_jarak < 0.1:
                break

            time.sleep(0.05)
            waktu += interval_jam

        st.balloons()
        st.success('🎯 Mereka sudah bertemu di tengah jalan!')
